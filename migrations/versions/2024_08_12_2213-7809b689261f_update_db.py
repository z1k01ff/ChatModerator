"""update db

Revision ID: 7809b689261f
Revises: 4680975c9767
Create Date: 2024-08-12 22:13:36.867339

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7809b689261f'
down_revision: Union[str, None] = '4680975c9767'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # We'll use a default chat_id of 0 for existing entries

    # op.execute("""

    #     INSERT INTO temp_RatingUsers (user_id, chat_id, rating)

    #     SELECT user_id, -1001415356906, rating FROM "RatingUsers"

    # """)
    conn = op.get_bind()

    # users = conn.execute(sa.text("SELECT user_id, rating FROM ratingusers")).fetchall()
    ratings = sa.table(
        'RatingUsers',
        sa.column('user_id'),
        sa.column('rating')
    )
    users = conn.execute(sa.select(ratings)).fetchall()

    temp_ratings = sa.table(
        'temp_RatingUsers',
        sa.column('user_id'),
        sa.column('chat_id'),
        sa.column('rating')
    )

    for user_id, rating in users:
        conn.execute(
            temp_ratings.insert().values(
                user_id=user_id,
                chat_id=-1001415356906,
                rating=rating
            )
        )

    # Drop the old table

    op.drop_table('RatingUsers')

    # Rename the temporary table to the original name

    op.rename_table('temp_RatingUsers', 'RatingUsers')


    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    op.create_table(
        'temp_RatingUsers',
        sa.Column('user_id', sa.BIGINT(), nullable=False),
        sa.Column('rating', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint('user_id', 'chat_id')
    )

    op.execute("""
        INSERT INTO temp_RatingUsers (user_id, chat_id, rating)
        SELECT user_id, rating FROM "RatingUsers"
    """)

    op.drop_table('RatingUsers')

    op.rename_table('temp_RatingUsers', 'RatingUsers')

